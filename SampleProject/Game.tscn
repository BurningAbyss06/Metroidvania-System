[gd_scene load_steps=11 format=3 uid="uid://c3xqaietfgs7l"]

[ext_resource type="Script" path="res://SampleProject/Scripts/Game.gd" id="1_xdpfu"]
[ext_resource type="PackedScene" uid="uid://xpbhai8nlgtx" path="res://SampleProject/Player.tscn" id="2_bam1a"]
[ext_resource type="Script" path="res://SampleProject/Scripts/Player.gd" id="3_dvkop"]
[ext_resource type="Texture2D" uid="uid://wiq0mic5m6is" path="res://SampleProject/Sprites/Collectible.png" id="3_kng3d"]

[sub_resource type="GDScript" id="GDScript_4div8"]
resource_name = "Minimap"
script/source = "extends Panel

var current_cell: Vector2i

func _ready() -> void:
	custom_minimum_size = MetSys.CELL_SIZE * 3
	set_anchors_and_offsets_preset(Control.PRESET_TOP_RIGHT, Control.PRESET_MODE_MINSIZE, 16)
	$ColorRect.custom_minimum_size = MetSys.CELL_SIZE
	$ColorRect.set_anchors_and_offsets_preset(Control.PRESET_CENTER)
	
	MetSys.cell_changed.connect(on_cell_changed)

func on_cell_changed(new_cell: Vector3i):
	current_cell = Vector2i(new_cell.x, new_cell.y)
	queue_redraw()

func _draw() -> void:
	for x in range(-1, 2):
		for y in range(-1, 2):
			MetSys.draw_cell(self, Vector2i(x + 1, y + 1), Vector3i(current_cell.x + x, current_cell.y + y, MetSys.current_layer))
	
	if MetSys.settings.theme.use_shared_borders:
		MetSys.draw_shared_borders()
	MetSys.draw_custom_elements(self, Rect2i(current_cell.x - 1, current_cell.y - 1, 3, 3))

func _input(event: InputEvent) -> void:
	if event is InputEventKey:
		if event.pressed:
			if event.keycode == KEY_M:
				visible = not visible
"

[sub_resource type="Animation" id="Animation_lgykt"]
resource_name = "Flash"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(0.5, 2),
"update": 0,
"values": [Color(1, 1, 1, 0.752941), Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_0p0d4"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0.752941)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_kkw8m"]
_data = {
"Flash": SubResource("Animation_lgykt"),
"RESET": SubResource("Animation_0p0d4")
}

[sub_resource type="GDScript" id="GDScript_u7odr"]
resource_name = "FullMap"
script/source = "extends Panel

@export var exact_player_location: bool

var SIZE: Vector2i

var starting_coords: Vector2i
var offset: Vector2i
var player_location: Node2D
var show_delta: bool

func _ready() -> void:
	SIZE = size / MetSys.CELL_SIZE
	
	MetSys.cell_changed.connect(queue_redraw.unbind(1))
	MetSys.cell_changed.connect(update_offset.unbind(1))
	MetSys.map_updated.connect(queue_redraw)
	
	player_location = MetSys.add_player_location(self)

func _draw() -> void:
	for x in SIZE.x:
		for y in SIZE.y:
			MetSys.draw_cell(self, Vector2i(x, y), Vector3i(x - offset.x, y - offset.y, MetSys.current_layer))
	
	if MetSys.settings.theme.use_shared_borders:
		MetSys.draw_shared_borders()
	MetSys.draw_custom_elements(self, Rect2i(-offset.x, -offset.y, SIZE.x, SIZE.y))
	
	var coords := MetSys.get_current_flat_coords()
	if show_delta and coords != starting_coords:
		var start_pos := MetSys.get_cell_position(starting_coords + offset)
		var current_pos := MetSys.get_cell_position(coords + offset)
		draw_line(start_pos, current_pos, Color.WHITE, 2)
		
		const arrow_size = 4
		draw_set_transform(current_pos, start_pos.angle_to_point(current_pos), Vector2.ONE)
		draw_primitive([Vector2(-arrow_size, -arrow_size), Vector2(arrow_size, 0), Vector2(-arrow_size, arrow_size)], [Color.WHITE], [])

func _input(event: InputEvent) -> void:
	if event is InputEventKey:
		if event.pressed:
			if event.keycode == KEY_M:
				visible = not visible
				if visible:
					update_offset()
			elif event.keycode == KEY_D:
				show_delta = not show_delta
				queue_redraw()

func update_offset():
	offset = -MetSys.get_current_flat_coords() + SIZE / 2
	player_location.offset = Vector2(offset) * MetSys.CELL_SIZE

func reset_starting_coords():
	var coords := MetSys.get_current_flat_coords()
	starting_coords = Vector2i(coords.x, coords.y)
	queue_redraw()
"

[sub_resource type="GDScript" id="GDScript_66suq"]
script/source = "extends Label

func _ready() -> void:
	MetSys.map_updated.connect(update)

func _notification(what: int) -> void:
	if what == NOTIFICATION_VISIBILITY_CHANGED:
		update()

func update():
	if is_visible_in_tree():
		text = \"%03d%%\" % int(MetSys.get_discovered_ratio() * 100)
"

[node name="Game" type="Node2D"]
script = ExtResource("1_xdpfu")
starting_map = "StartingPoint.tscn"

[node name="Player" parent="." groups=["player"] instance=ExtResource("2_bam1a")]
position = Vector2(368, 248)
script = ExtResource("3_dvkop")

[node name="Camera2D" type="Camera2D" parent="Player"]

[node name="UI" type="CanvasLayer" parent="."]

[node name="Minimap" type="Panel" parent="UI"]
clip_contents = true
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -112.0
offset_top = 16.0
offset_right = -16.0
offset_bottom = 112.0
grow_horizontal = 0
script = SubResource("GDScript_4div8")

[node name="ColorRect" type="ColorRect" parent="UI/Minimap"]
modulate = Color(1, 1, 1, 0.752941)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -16.0
offset_top = -16.0
offset_right = 16.0
offset_bottom = 16.0
grow_horizontal = 2
grow_vertical = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="UI/Minimap/ColorRect"]
autoplay = "Flash"
libraries = {
"": SubResource("AnimationLibrary_kkw8m")
}

[node name="FullMap" type="Panel" parent="UI"]
visible = false
clip_contents = true
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -240.0
offset_top = -160.0
offset_right = 240.0
offset_bottom = 160.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_u7odr")
exact_player_location = true

[node name="Percent" type="Label" parent="UI/FullMap"]
layout_mode = 0
offset_right = 40.0
offset_bottom = 23.0
text = "0%"
script = SubResource("GDScript_66suq")

[node name="Label" type="Label" parent="UI/FullMap"]
layout_mode = 1
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_top = -23.0
offset_right = 40.0
grow_vertical = 0
text = "Press D to toggle delta vector"

[node name="HBoxContainer" type="HBoxContainer" parent="UI"]
offset_left = 8.0
offset_top = 8.0
offset_right = 48.0
offset_bottom = 34.0

[node name="TextureRect" type="TextureRect" parent="UI/HBoxContainer"]
layout_mode = 2
texture = ExtResource("3_kng3d")
expand_mode = 2
stretch_mode = 5

[node name="CollectibleCount" type="Label" parent="UI/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "0"
vertical_alignment = 1
